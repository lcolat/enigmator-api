{
  "name": "UserEnigmator",
  "base": "User",
  "idInjection": true,
  "options": {
    "validateUpsert": true
  },
  "properties": {
    "id": {
      "type": "number",
      "required": true
    },
    "rank": {
      "type": "number"
    },
    "firstName": {
      "type": "string",
      "required": true
    },
    "lastName": {
      "type": "string",
      "required": true
    },
    "rang": {
      "type": "string"
    },
    "type": {
      "type": "string"
    },
    "creationDate": {
      "type": "date",
      "required": true,
      "default": "$now"
    },
    "country": {
      "type": "string"
    }
  },
  "validations": [],
  "relations": {
    "userEnigmators": {
      "type": "hasMany",
      "model": "UserEnigmator",
      "foreignKey": "",
      "options": {
        "nestRemoting": true,
        "disableInclude": true
      },
      "through": "friends",
      "keyThrough": "ID_FROM"
    }
  },
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "ALLOW"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$owner",
      "permission": "ALLOW"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "AddAFriend"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "AcceptAFriendRequest"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "DenyAFriendRequest"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "GetMyFriend"
    },
    {
      "accessType": "READ",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "ALLOW"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "IsFriend"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "SendAMessage"
    }
  ],
  "methods": {
    "prototype.AddAFriend": {
      "accepts": [
        {
          "arg": "id",
          "type": "number",
          "required": true,
          "description": "id de l'amis"
        },
        {
          "arg": "options",
          "type": "object",
          "http": "optionsFromRequest"
        }
      ],
      "returns": [],
      "description": "Ajouter un amis",
      "http": [
        {
          "path": "/AddAFriend",
          "verb": "post"
        }
      ]
    },
    "prototype.AcceptAFriendRequest": {
      "accepts": [
        {
          "arg": "id",
          "type": "number",
          "required": true,
          "description": "ID of the friend wanted"
        },
        {
          "arg": "options",
          "type": "object",
          "http": "optionsFromRequest"
        }
      ],
      "returns": [],
      "description": "Accept a friend Request",
      "http": [
        {
          "path": "/AcceptAFriendRequest",
          "verb": "post"
        }
      ]
    },
    "prototype.DenyAFriendRequest": {
      "accepts": [
        {
          "arg": "id",
          "type": "number",
          "required": true,
          "description": "ID of the friend wanted"
        },
        {
          "arg": "options",
          "type": "object",
          "http": "optionsFromRequest"
        }
      ],
      "returns": [],
      "description": "Deny a friend Request",
      "http": [
        {
          "path": "/DenyAFriendRequest",
          "verb": "post"
        }
      ]
    },
    "GetMyFriend": {
      "accepts": [
        {
          "arg": "options",
          "type": "object",
          "http": "optionsFromRequest"
        }
      ],
      "returns": [],
      "description": "Affiche la liste des amis",
      "http": [
        {
          "path": "/GetMyFriend",
          "verb": "get"
        }
      ]
    },
    "prototype.IsFriend": {
      "accepts": [
        {
          "arg": "id",
          "type": "number",
          "required": true,
          "description": "ID of the friend wanted"
        },
        {
          "arg": "options",
          "type": "object",
          "http": "optionsFromRequest"
        }
      ],
      "returns": [
        {
          "args": "result",
          "type": "object",
          "root": true
        }
      ],
      "description": "Check if this user is my friend",
      "http": [
        {
          "path": "/isFriend",
          "verb": "get"
        }
      ]
    },
    "prototype.SendAMessage": {
      "accepts": [
        {
          "arg": "id",
          "type": "number",
          "required": true,
          "description": "ID of the friend wanted"
        },
        {
          "arg": "content",
          "type": "string",
          "required": true,
          "description": "Message content"
        },
        {
          "arg": "options",
          "type": "object",
          "http": "optionsFromRequest"
        }
      ],
      "returns": [{
        "arg": "result",
        "type": "object",
        "root": true
      }],
      "description": "SendAPrivateMessage",
      "http": [ {
        "path": "/SendAPrivateMessage",
        "verb": "post"
      }]
    },
    "prototype.GetConversationMessage": {
      "accepts": [
        {
          "arg": "id",
          "type": "number",
          "required": true,
          "description": "ID of the friend wanted"
        },
        {
          "arg": "options",
          "type": "object",
          "http": "optionsFromRequest"
        }
      ],
      "returns": [{
        "arg": "result",
        "type": "object",
        "root": true
      }],
      "description": "Get messages between 2 users",
      "http": [ {
        "path": "/GetConversationMessage",
        "verb": "post"
      }]
    },

  }
}
